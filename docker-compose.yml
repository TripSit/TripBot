version: '3.9'

name: tripsit-dev-apps

########################### EXTENSION FIELDS
# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID
 
# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

########################### SERVICES
services:
  tripbot:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./src/docker/Dockerfile.tripbot
      # Only will build development stage from our dockerfile
      target: development
    container_name: tripbot
    depends_on:
      - tripbot_database
      - tripbot_prisma
    working_dir: /usr/src/app
    env_file:
      - .env
    environment:
      <<: *default-tz-puid-pgid
    networks:
      - tripbot-net
      - tripbot_database-net
      - tripbot_website-net
    volumes:
      - ./src:/usr/src/app/src # Needed for hot-reloading of source code
      - ./.env:/usr/src/app/.env # Needed for hot-reloading the .env
      - ./package.json:/usr/src/app/package.json # Needed for saving changes to package.json
      - ./package-lock.json:/usr/src/app/package-lock.json # Needed for saving changes to package.json
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      - traefik.docker.network=tripbot-net
      - traefik.http.services.tripbot-svc.loadbalancer.server.port=1337
      - traefik.http.routers.tripbot-rtr.rule=Host(`api.${BOT_DOMAIN}`)
      - traefik.http.routers.tripbot-rtr.service=tripbot-svc
      - traefik.http.routers.tripbot-rtr.entrypoints=websecure
      - traefik.http.routers.tripbot-rtr.tls=true
      - traefik.http.routers.tripbot-rtr.middlewares=default@file

  tripbot_database:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./src/docker/Dockerfile.postgres
    container_name: tripbot_database
    # Uncomment this if you want the DB to persist between rebuilds
    # volumes:
    #   - ${DOCKERDIR}/appdata/database/data:/var/lib/postgresql/data
    # ports:
    #   - 5432:5432
    networks:
      - tripbot_database-net
    environment:
      POSTGRES_USER: tripsit
      POSTGRES_DB: tripsit
      POSTGRES_PASSWORD: ${POSTGRESS_ROOT}
      # POSTGRES_HOST_AUTH_METHOD: trust
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.docker.network=tripbot_database-net
      - traefik.enable=false

  tripbot_prisma:
    # <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./src/docker/Dockerfile.prisma
    container_name: tripbot_prisma
    depends_on:
      - tripbot_database
    networks:
      - tripbot_database-net
      - tripbot_prisma-net
    volumes:
      - ./src/prisma/:/usr/src/app/src/prisma/
      - ./src/knex/:/usr/src/app/src/knex/
      - ./src/global/:/usr/src/app/src/global/
      - ./src/global/@types/database.d.ts:/usr/src/app/src/types/database.d.ts
    environment:
      <<: *default-tz-puid-pgid
      PORT: 5000
      TZ: America/Chicago
      POSTGRES_DB_URL: postgres://tripsit:${POSTGRESS_ROOT}@tripbot_database:5432/tripsit
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      - traefik.docker.network=tripbot_prisma-net
      - traefik.http.services.tripbot_prisma-svc.loadbalancer.server.port=5555

      - traefik.http.routers.tripbot_prisma.rule=Host(`prisma.${DNS_DOMAIN}`)
      - traefik.http.routers.tripbot_prisma.entrypoints=websecure
      - traefik.http.routers.tripbot_prisma.tls.certresolver=letsencrypt
      - traefik.http.routers.tripbot_prisma.service=tripbot_prisma-svc
      - traefik.http.routers.tripbot_prisma.middlewares=googleAuth@file

  tripbot_pgadmin:
    build:
      context: ./
      dockerfile: ./src/docker/Dockerfile.pgadmin
    restart: unless-stopped
    container_name: tripbot_pgadmin
    depends_on:
      - tripbot_database
    # ports:
    #   - 8081:80
    networks:
      - tripbot_pgadmin-net
      - tripbot_database-net
    environment:
      <<: *default-tz-puid-pgid
      TZ: America/Chicago
      PGADMIN_DEFAULT_EMAIL: admin@tripsit.me
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRESS_ADMIN_PASS}
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      - traefik.docker.network=tripbot_pgadmin-net
      - traefik.http.services.tripbot_pgadmin-svc.loadbalancer.server.port=80

      - traefik.http.routers.tripbot_pgadmin.rule=Host(`database.${DNS_DOMAIN}`, `db.${DNS_DOMAIN}`, `pgadmin.${DNS_DOMAIN}`)
      - traefik.http.routers.tripbot_pgadmin.entrypoints=websecure
      - traefik.http.routers.tripbot_pgadmin.tls.certresolver=letsencrypt
      - traefik.http.routers.tripbot_pgadmin.service=tripbot_pgadmin-svc
      - traefik.http.routers.tripbot_pgadmin.middlewares=default@file

  tripbot_redis:
    <<: *common-keys-core
    image: bitnami/redis:latest
    container_name: tripbot_redis
    user: root
    # ports:
    #   - 6379:6379
    networks:
      - tripbot_redis-net
    environment:
      # - REDIS_PASSWORD=Password123
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.docker.network=tripbot_redis-net
      - traefik.enable=false

  tripbot_api:
    <<: *common-keys-apps
    build:
      context: ./
      dockerfile: ./src/docker/Dockerfile.api
      # Only will build development stage from our dockerfile
      target: development
    container_name: tripbot_api
    depends_on:
      - tripbot_database
      - tripbot_redis
    # ports:
    #   - 5000:5000
    #   - 9229:9229
    networks:
      - tripbot_api-net
      - tripbot_database-net
      - tripbot_redis-net
    volumes:
      - ./src:/usr/src/app/src # Needed for hot-reloading of source code
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      <<: *default-tz-puid-pgid
      PORT: 5000
      TZ: America/Chicago
      DATABASE_URL: postgres://tripsit:${POSTGRESS_ROOT}@tripbot_database:5432/tripsit
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - traefik.enable=true
      - traefik.docker.network=tripbot_api-net
      - traefik.http.services.tripbot_api-svc.loadbalancer.server.port=5000

      - traefik.http.routers.tripbot_api.rule=Host(`tripbot.${DNS_DOMAIN}`) && PathPrefix(`/api`) || Host(`api.${DNS_DOMAIN}`)
      - traefik.http.routers.tripbot_api.entrypoints=websecure
      - traefik.http.routers.tripbot_api.tls.certresolver=letsencrypt
      - traefik.http.routers.tripbot_api.service=tripbot_api-svc
      - traefik.http.routers.tripbot_api.middlewares=default@file
    command: npx tsc-watch --onSuccess "npx nodemon --config ./src/api/nodemon.json"

networks:
  tripbot-net:
    name: tripbot-net
  tripbot_database-net:
    name: tripbot_database-net
  tripbot_redis-net:
    name: tripbot_redis-net
  tripbot_prisma-net:
    name: tripbot_prisma-net
    # external: true
  tripbot_website-net:
    name: tripbot_website-net
    # external: true
  tripbot_api-net:
    name: tripbot_api-net
    # external: true
  tripbot_pgadmin-net:
    name: tripbot_pgadmin-net
    # external: true